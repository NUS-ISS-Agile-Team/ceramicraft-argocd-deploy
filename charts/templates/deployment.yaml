apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:  
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels: 
                  app: {{ .Release.Name }} 
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: fix-perm
        image: busybox:1.36
        command: [ 'sh', '-c', 'chmod 777 /app/logs' ]
        volumeMounts:
        - name: applogs
          mountPath: /app/logs
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /app/resources
              readOnly: true
            - name: applogs
              mountPath: /app/logs
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
            - name: grpc
              containerPort: {{ .Values.service.grpcPort }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ms-secret
                  key: MYSQL_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ms-secret
                  key: JWT_SECRET
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ms-secret
                  key: SMTP_PASSWORD
            - name: SMTP_EMAIL_FROM
              valueFrom:
                secretKeyRef:
                  name: ms-secret
                  key: SMTP_EMAIL_FROM
      volumes:
        - name: config
          configMap:
            name: {{ .Values.volumes.configMapName }}
        - name: applogs
          hostPath:
            path: {{ .Values.volumes.logPath }}
            type: DirectoryOrCreate